<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd">

        <!--配置数据源druid 阿里巴巴-->
        <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
                <property name="driverClassName" value="com.mysql.jdbc.Driver" ></property>
                <property name="url" value="jdbc:mysql://127.0.0.1:3306/lijun"></property>
                <property name="username" value="root"></property>
                <property name="password" value="huayu"></property>
        </bean>
    <aop:config proxy-target-class="true"> </aop:config>
    <!--配置日志-->
        <bean id="settings" class="org.apache.ibatis.session.Configuration">
                <property name="logImpl" value="org.apache.ibatis.logging.log4j.Log4jImpl"></property>
        </bean>

        <!--创建sqlsessionfactory-->
        <bean id="sqlSessionFactory" class="com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean">
                <property name="dataSource" ref="dataSource"></property>
                <property name="typeAliasesPackage" value="com.huayu.ssm.bean"></property>
                <property name="configuration" ref="settings"></property>
              <!--  <property name="configLocation" value="classpath:MyBatis.xml"></property>-->
                <property name="plugins">
                   <array>
                      <bean class="com.github.pagehelper.PageInterceptor">
                         <property name="properties">
                            <value>property-key-property-value</value>
                          </property>
                      </bean>
                    </array>
                </property>
        </bean>

       <!-- //6.5.4.2.spring批量扫描mybatis的mapper接口-->
        <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
                <property name="basePackage" value="com.huayu.ssm.mapper"></property>
                <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
        </bean>

        <!--配置Mybatis事务-->
        <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
                <property name="dataSource" ref="dataSource"></property>
        </bean>

        <!--开启事务注解-->
        <tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven>

        <!--开启注解扫描-->
        <context:component-scan base-package="com.huayu.ssm"></context:component-scan>

 <!--       &lt;!&ndash;视图解析器配置后缀前缀jsp专用&ndash;&gt;
        <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
                <property name="prefix" value="jsp/"></property>
        </bean>

     &lt;!&ndash;配置freeMarker的模板路径&ndash;&gt;
        <bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
            <property name="templateLoaderPath" value="WEB-INF/template/"></property>
            <property name="defaultEncoding" value="utf-8"></property>
        </bean>
    &lt;!&ndash; 配置freeMarker视图解析器 ftl专用&ndash;&gt;
        <bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
            <property name="contentType" value="text/html; charset=utf-8"></property>
            <property name="suffix" value=".ftl"></property>
        </bean>-->

        <bean id="resourceTemplateResolver" class="org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver">
            <property name="characterEncoding" value="UTF-8"></property>
            <property name="prefix" value="WEB-INF/template1/"></property>
            <property name="suffix" value=".html"></property>
            <property name="templateMode" value="HTML5"></property>
            <property name="cacheable" value="false"></property>
        </bean>

        <!-- 模板引擎  -->
        <bean id="springTemplateEngine" class="org.thymeleaf.spring4.SpringTemplateEngine">
            <property name="templateResolver" ref="resourceTemplateResolver"></property>
        </bean>
        <!--配置视图解析器-->
        <bean class="org.thymeleaf.spring4.view.ThymeleafViewResolver">
            <property name="characterEncoding" value="utf-8"></property>
            <property name="templateEngine" ref="springTemplateEngine"></property>
        </bean>

    <!--转化json-->
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <!--json视图拦截器，读取到@ResponseBody的时候去配置它-->
                <ref bean="mappingJacksonHttpMessageConverter"/>
            </list>
        </property>
    </bean>
    <!--json转化器，它可以将结果转化-->
    <bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>application/json;charset=UTF-8</value>
            </list>
        </property>
    </bean>
</beans>